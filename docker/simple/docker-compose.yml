---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.0
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    container_name: sn-zookeeper

  kafka:
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    # An important note about accessing Kafka from clients on other machines: 
    # -----------------------------------------------------------------------
    #
    # The config used here exposes port 9092 for _external_ connections to the broker
    # i.e. those from _outside_ the docker network. This could be from the host machine
    # running docker, or maybe further afield if you've got a more complicated setup. 
    # If the latter is true, you will need to change the value 'localhost' in 
    # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those 
    # remote clients
    #
    # For connections _internal_ to the docker network, such as from other services
    # and components, use kafka:29092.
    #
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    #
    image: confluentinc/cp-kafka:7.1.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    container_name: sn-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  neo4j:
    image: neo4j:community
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_dbms_memory_heap_max__size: 8G
      NEO4J_ACCEPT_LICENSE_AGREEMENT: 'yes'
      NEO4J_dbms_directories_import: "/"
      NEO4JLABS_PLUGINS: '["apoc"]'
    volumes:
      - ./neo4j-init-files:/var/lib/neo4j/conf
      - ./neo4j/data:/data

  # modelruntime:
  #   image: modelruntime:latest
  #   depends_on:
  #    - zookeeper
  #    - kafka
  #    - neo4j
  #   ports:
  #     - "8080"
  
  init-kafka:
     image: confluentinc/cp-kafka:latest
     depends_on:
       - kafka
     entrypoint: [ '/bin/sh', '-c' ]
     command: |
       "
       # blocks until kafka is reachable
       kafka-topics --bootstrap-server kafka:29092 --list 
       echo -e 'Deleting kafka topics'
       kafka-topics --bootstrap-server kafka:29092 --delete --topic element-input
       kafka-topics --bootstrap-server kafka:29092 --delete --topic solver-job-input
       kafka-topics --bootstrap-server kafka:29092 --delete --topic solver-metrics
       echo -e 'Creating kafka topics'
       kafka-topics --bootstrap-server kafka:29092 --create --topic element-input --partitions 2
       kafka-topics --bootstrap-server kafka:29092 --create --topic solver-job-input --partitions 2
       kafka-topics --bootstrap-server kafka:29092 --create --topic solver-metrics
       echo -e 'Successfully created the following topics:'
       kafka-topics --bootstrap-server kafka:29092 --list
       sleep infinity
       "
  
  # # Only view, unable to add message
  # kafdrop:
  #   image: obsidiandynamics/kafdrop
  #   restart: "no"
  #   ports:
  #     - "9091:9000"
  #   environment:
  #     KAFKA_BROKERCONNECT: "kafka:29092"
  #     JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
  #   depends_on:
  #     - "kafka"

